# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  pull_request:
    branches: [ "main",'pre-production']

permissions:
  contents: read

#env:
#  TEST_DB_USE_CLOUD: "TRUE"
#  TEST_DB_SERVER_NAME: ${{ secrets.TEST_DB_SERVER_NAME }}
#  TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
#  TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
#  TEST_DB_DATABASE: ${{ secrets.TEST_DB_DATABASE }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
#        image: postgres
#        image: postgis/postgis:latest
#        image: postgis/postgis:17-3.5
        image: timescale/timescaledb:2.18.0-pg17
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - name: Check out source repository
      uses: actions/checkout@v4

    - name: Install Postgis
      run: |
          sudo apt-get update
          sudo apt-get install -y postgis postgresql-17-postgis-3
#    - name: Install timescaledb
#      run: |
#        curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
#        echo "deb [signed-by=/etc/apt/trusted.gpg.d/postgresql.gpg] https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list > /dev/null
#        echo "deb https://packagecloud.io/timescale/timescaledb/ubuntu/ $(lsb_release -c -s) main" | sudo tee /etc/apt/sources.list.d/timescaledb.list
#        wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/timescaledb.gpg
#        sudo apt update
#        sudo apt install timescaledb-2-postgresql-17 postgresql-client-17
#        sudo timescaledb-tune --conf-path /etc/postgresql/17/main/postgresql.conf --quiet --yes

#    - name: Restart PostgreSQL
#      run: sudo systemctl restart postgresql
#    - name: Get config
#      run: psql -U postgres -c 'SHOW config_file'
      #    - name: Install dependencies
#      run: |
#          sudo apt-get update
#          sudo apt-get install -y build-essential pkg-config libproj-dev libgeos-dev libsqlite3-dev
#
#    - name: Install SpatiaLite
#      run: |
#          sudo apt-get update
#          sudo apt-get install -y libsqlite3-mod-spatialite libspatialite-dev

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install the project
      run: uv sync --locked --all-extras --dev

    - name: Run tests
      env:
        MODE: development
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_PASSWORD: postgres
        DB_DRIVER: postgres
#        SPATIALITE_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu/mod_spatialite.so

      run: uv run pytest -vv --durations=20 --junitxml=junit.xml

#    - name: Upload results to Codecov
#      uses: codecov/codecov-action@v4
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#
#    - name: Upload test results to Codecov
#      if: ${{ !cancelled() }}
#      uses: codecov/test-results-action@v1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}